---
icinga2_version: ''

icinga2_use_external_repo: true

icinga2_certificate_cn: '{{ ansible_fqdn }}'

icinga2_requirements:
  - gnupg
  - ca-certificates

icinga2_dependencies:
  - icinga2
  - icinga2-common

# distribution dependent
# monitoring_plugins_directory: /usr/lib/nagios/plugins

#tz: America/New_York
tz: UTC
icinga2_local_scriptsdir: /usr/local/scripts
icinga2_backupdir: /srv/backup/icinga2/{{ inventory_hostname }}

icinga2_rootdir: /usr/share/icinga2

# 'master' or 'satellite'
icinga2_mode: master

# master internal name
icinga2_server: '{{ inventory_hostname }}'

# master fqdn
icinga2_master: '{{ ansible_fqdn }}'

icinga2_master_features_disabled:
  - perfdata
  - notification
  - livestatus

icinga2_master_features_enabled:
  - checker
  - api
  - ido-mysql
  - mainlog

icinga2_api_enabled: true
icinga2_api_accept_config: true
icinga2_api_accept_commands: true
icinga2_api_ticket_salt: TicketSalt
icinga2_api_user: []
# - root:
#     password: foo
#     client_cn: NodeName
#     permissions: '*'

icinga2_ido_type: mysql
icinga2_ido_enabled: true
icinga2_ido_username: 'icinga2_ido'
icinga2_ido_password: 'icinga2_ido'
icinga2_ido_host: '127.0.0.1'
icinga2_ido_database: 'icinga2_ido'
icinga2_ido_port: 3306
icinga2_ido_socket: /run/mysqld.sock

icinga2_mainlog_severity: warning
icinga2_mainlog_path: /var/log/icinga2/icinga2.log

# master check definitions:
icinga2_hosts: []
# icinga2_hosts:
#   localhost:
#     import: generic-host
#     address: '{{ ansible_default_ipv4.address }}'
#     vars: |
#       os = "Linux"
#       dist = "{{ ansible_distribution }}"
#       dist_ver = "{{ ansible_distribution_version }}"
#       disks = {
#         "disk /" = {
#           disk_partitions = "/"
#         }
#       }

# satellite definitions
icinga2_satellite: []
#  satellite.local:
#    import: generic-host
#    vars: |
#      os = "Linux"
#      dist = "{{ ansible_distribution }}"
#      dist_ver = "{{ ansible_distribution_version }}"
#      satellite = true
#      disks = {
#        "disk /" = {
#          disk_partitions = "/"
#        }
#      }


icinga2_service_downtimes: []
#  backup-downtime:
#    author: "icingaadmin"
#    comment: "Scheduled downtime for backup"
#    ranges:
#      monday: service.vars.backup_downtime
#      tuesday: service.vars.backup_downtime
#      wednesday: service.vars.backup_downtime
#      thursday: service.vars.backup_downtime
#      friday: service.vars.backup_downtime
#      saturday: service.vars.backup_downtime
#      sunday: service.vars.backup_downtime
#    assign_where: service.vars.backup_downtime != ""
#  test-downtime:
#    author: "icingaadmin"
#    comment: "Scheduled downtime for backup"
#    ranges:
#      monday: service.vars.backup_downtime
#      tuesday: service.vars.backup_downtime
#      wednesday: service.vars.backup_downtime
#      thursday: service.vars.backup_downtime
#      friday: service.vars.backup_downtime
#      saturday: service.vars.backup_downtime
#      sunday: service.vars.backup_downtime
#    assign_where: service.vars.backup_downtime != ""


icinga2_host_downtimes: []

#icinga2_notification:
# notifications
# example for the standard notifications:
#- host:
#    name: mail-icingaadmin
#    import: mail-host-notification
#    user_groups: host.vars.notification.mail.groups
#    users: host.vars.notification.mail.users
#    interval: 2h
#    vars.notification_logtosyslog: true
#    assign_where: host.vars.notification.mail
#- service:
#    name: mail-icingaadmin
#    import: mail-service-notification
#    user_groups: host.vars.notification.mail.groups
#    users: host.vars.notification.mail.users
#    interval: 2h
#    vars.notification_logtosyslog: true
#    assign_where: host.vars.notification.mail
icinga2_notification: []
#  host:
#    name: mail-icingaadmin
#    import: mail-host-notification
#    user_groups: host.vars.notification.mail.groups
#    users: host.vars.notification.mail.users
#    interval: 2h
#    vars.notification_logtosyslog: true
#    assign_where: host.vars.notification.mail
#  service:
#    name: mail-icingaadmin
#    import: mail-service-notification
#    user_groups: host.vars.notification.mail.groups
#    users: host.vars.notification.mail.users
#    interval: 2h
#    vars.notification_logtosyslog: true
#    assign_where: host.vars.notification.mail


icinga2_notification_user: []
# - icingaadmin:
#     import: generic-user
#     display_name: "Icinga 2 Admin"
#     groups:
#       - icingaadmins
# - bodsch:
#     import: generic-user
#     display_name: Bodo Schulz
#     groups:
#       - icingaadmins
#     email: bodo@boone-schulz.de
# - vonhorn:
#     import: generic-user
#     display_name: Egbert von Horn
#     groups:
#       - icingaadmins
#     email: egbert@vonhorn.de

icinga2_notification_usergroups: []
# - icingaadmins:
#     display_name: "Icinga 2 Admin Group"

icinga2_ido_mysql_schema_file: /usr/share/icinga2-ido-mysql/schema/mysql.sql
icinga2_ido_mysql_schema_updates: /usr/share/icinga2-ido-mysql/schema/upgrade

icinga2_aide_enabled: true

# historic packages use nagios, https://lists.icinga.org/pipermail/icinga-users/2014-February/007976.html
#icinga2cmd_group: nagios
icinga2_cmd_group: icingacmd
# icinga2_pki_userdir: nagios

# v2.8+, https://github.com/Icinga/icinga2/issues/5779
icinga2_pki_dir: /var/lib/icinga2/certs
icinga2_pki_cadir: /var/lib/icinga2/ca

icinga2_hostgroups:
  - { name: 'linux-servers', displayname: 'Linux Servers', conditions: 'assign where host.vars.os == "Linux"' }
  - { name: 'icinga-satellites', displayname: 'Icinga2 Satellites', conditions: 'assign where host.vars.satellite' }

icinga2_servicegroups:
  - { name: ping, displayname: 'Ping Checks', conditions: 'assign where match("ping*", service.name)' }
  - { name: disk, displayname: 'Disk Checks', conditions: 'assign where match("disk*", service.name)' }
  - { name: http, displayname: 'HTTP Checks', conditions: 'assign where match("http*", service.name)' }
  - { name: https, displayname: 'HTTPS Checks', conditions: 'assign where match("https*", service.name)' }
  - { name: 'tls-cert', displayname: 'TLS Certs Checks', conditions: 'assign where match("ssl*", service.name)' }

## Client conf

icinga2_master_port: 5665

icinga2_plugins_extra:
  - restart_service
  - check_diskstat.sh
  - check_hostname
  - check_mysql_health
  - check_mem
  - check_ssl_cert
  - check_ssl_observatory
  - check_redis
  - check_postfix_queue
  - check_uptime.sh

icinga2_become_user: nagios

icinga2_plugins_download: []
#   - url: 'https://gitlab.com/coremedia-as-code/monitoring/monitoring-plugins/raw/master/icinga2/check_coremedia_licenses.py'
#     dest: 'check_coremedia_licenses.py'
#     checksum: ''
#     validate: false
#   - url: 'https://www.claudiokuenzler.com/monitoring-plugins/check_smart.pl'
#     dest: 'check_smart.pl'
#     checksum: 'sha256:a137f37aac35e66f90a34fccca5251d7da6a0847e3f1caab9c97b5fe5b5d183d.'
#   - url: 'https://raw.githubusercontent.com/bodsch/check_arch_updates/1.0/check_arch_updates'
#     dest: 'check_arch_updates'
#     checksum: 'sha256:7afa562aaedb63f6e93cfebfa4a9a3ea49fecda62d4dae3d8ff919b76c117c41'
