#!/bin/bash

LOGFILE="/var/log/icinga2/restart_service.log"

show_help() {
  echo
  echo "$0 --state STATE --state-type TYPE --attempt ATTEMPT --service SERVICE"
  echo
  echo "restart a service trought icinga2"
  echo
  echo "  --state STATE           CRITICAL or WARNING"
  echo "  --state-type TYPE       SOFT or HARD"
  echo "  --attempt ATTEMPT       counter for failed checks"
  echo "  --service SERVICE       name of the service to be restarted"
  echo ""
  echo "Example: --state CRITICAL --state-type HARD --attempt 4 --service nginx"
  echo
  echo "Example: --state WARNING --state-type SOFT --attempt 4 --service nginx"
  echo
}

redirectIO() {
  # IO redirection for logging task management tool.
  touch ${LOGFILE}
  exec 6>&1          # Link file descriptor #6 with stdout.
                     # Saves stdout.
  exec >> ${LOGFILE}   # stdout replaced with file ${LOGFILE}.
}

cleanRedirectIO() {
  # Clean up IO redirection
  exec 1>&6 6>&-      # Restore stdout and close file descriptor #6.
}

# process args
while [ ! -z "$1" ]; do
  case $1 in
    -s|--state)      shift; service_state=${1} ;;
    -t|--state-type) shift; service_state_type=${1} ;;
    -a|--attempt)    shift; service_attempt=${1} ;;
    -S|--service)    shift; service=${1} ;;
    -h|--help)       show_help; exit 1 ;;
  esac
  shift
done

if ( [ -z "${service_state}" ] || [ -z "${service_state_type}" ] || [ -z "${service_attempt}" ] || [ -z "${service}" ] )
then
  show_help
  [ -z "${service_state}" ] && echo "  missing service_state"
  [ -z "${service_state_type}" ] && echo "  missing service_state_type"
  [ -z "${service_attempt}" ] && echo "  missing service_attempt"
  [ -z "${service}" ] && echo "  missing service"
  exit 3
else
  redirectIO

  logger -t restart_service "${service} ${service_state} ${service_state_type} ${service_attempt}"
  echo "$(date "+%d.%m.%Y %H:%M:%S") ${0}"
  echo "$(date "+%d.%m.%Y %H:%M:%S") service_state     : ${service_state}"
  echo "$(date "+%d.%m.%Y %H:%M:%S") service_state_type: ${service_state_type}"
  echo "$(date "+%d.%m.%Y %H:%M:%S") service_attempt   : ${service_attempt}"
  echo "$(date "+%d.%m.%Y %H:%M:%S") service           : ${service}"

  if ( [ "${service_state}" = "CRITICAL" ] && [ "${service_state_type}" = "HARD" ] )
  then
    sudo $(command -v service) ${service} restart
    [[ $? -ne 0 ]] && logger -t restart_service "fail to restart service ${service}"
  # only restart on the third attempt of a critical event
  elif ( [ "${service_state}" = "CRITICAL" ] && [ "${service_state_type}" = "SOFT" ] && [ ${service_attempt} -eq 2 ] )
  then
    sudo $(command -v service) ${service} restart
    [[ $? -ne 0 ]] && logger -t restart_service "fail to restart service ${service}"
  fi

  cleanRedirectIO
fi
