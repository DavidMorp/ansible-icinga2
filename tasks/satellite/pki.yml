---

- name: assert missing salt
  assert:
    that:
      - icinga2_salt | length != 0
    msg: icinga2 salt is missing
    quiet: true

- name: set facts
  set_fact:
    icinga2_pki_ca_key: "{{ icinga2_pki_dir }}/ca.key"
    icinga2_pki_ca_cert: "{{ icinga2_pki_dir }}/ca.crt"
    icinga2_pki_fqdn_key: "{{ icinga2_pki_dir }}/{{ ansible_fqdn }}.key"
    icinga2_pki_fqdn_cert: "{{ icinga2_pki_dir }}/{{ ansible_fqdn }}.crt"
    icinga2_pki_master_cert: "{{ icinga2_pki_dir }}/trusted-master.crt"

- block:
    # compare checksum for ca.cert
    #
    - name: copy ca.crt from primary icinga2 master
      fetch:
        src: "{{ icinga2_pki_ca_cert }}"
        dest: files/{{ icinga2_primary_master }}/ca.crt
        flat: true
      delegate_to: '{{ icinga2_primary_master }}'

    - name: check local ca.crt
      stat:
        path: "files/{{ icinga2_primary_master }}/ca.crt"
        checksum_algorithm: sha1
        get_checksum: yes
      run_once: true
      delegate_to: localhost
      register: primary_master_ca_file

    #
    - name: check for existing '{{ icinga2_pki_ca_cert }}'
      stat:
        path: "{{ icinga2_pki_ca_cert }}"
        checksum_algorithm: sha1
        get_checksum: yes
      register: satellite_ca_file

    - name: set facts
      set_fact:
        icinga2_remove_old_cert: "{{ primary_master_ca_file.stat.checksum | string == satellite_ca_file.stat.checksum | string }}"
      when: satellite_ca_file.stat.checksum is defined

    # - debug:
    #     var: "{{ item }}"
    #   when: item is defined
    #   with_items:
    #     - icinga2_remove_old_cert
    #     - primary_master_ca_file.stat.checksum
    #     - satellite_ca_file.stat.checksum

    - name: remove old ca file from satellite
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /var/lib/icinga2/certs
        - /var/lib/icinga2/ca
      when: satellite_ca_file.stat.checksum is defined and
        not icinga2_remove_old_cert


- name: configure icinga2
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
  with_items:
    - src: etc/icinga2/icinga2.conf.j2
      dest: /etc/icinga2/icinga2.conf
    - src: etc/icinga2/constants.conf.j2
      dest: /etc/icinga2/constants.conf
    - src: etc/icinga2/features/mainlog.conf.j2
      dest: /etc/icinga2/features-available/mainlog.conf
#  when: icinga2_salt is defined

- name: configure icinga2 api
  template:
    src: etc/icinga2/features/api.conf.j2
    dest: /etc/icinga2/features-available/api.conf
    mode: 0644

# - name: check if the icinga master {{ icinga2_primary_master }} are available
#   wait_for:
#     host: "{{ icinga2_primary_master }}"
#     port: "{{ icinga2_master_port | default(5665) }}"
#     delay: 4              # No wait before first check (sec)
#     timeout: 5            # Stop checking after timeout (sec)
#   ignore_errors: false
#   retries: 10
#   delay: 10

# - name: set facts
#   set_fact:
#     icinga2_pki_ca_key: "{{ icinga2_pki_dir }}/ca.key"
#     icinga2_pki_ca_cert: "{{ icinga2_pki_dir }}/ca.crt"
#     icinga2_pki_fqdn_key: "{{ icinga2_pki_dir }}/{{ ansible_fqdn }}.key"
#     icinga2_pki_fqdn_cert: "{{ icinga2_pki_dir }}/{{ ansible_fqdn }}.crt"
#     icinga2_pki_master_cert: "{{ icinga2_pki_dir }}/trusted-master.crt"

- name: "create '{{ icinga2_pki_dir }}'"
  file:
    dest: "{{ icinga2_pki_dir }}"
    state: directory
    owner: "{{ icinga2_user }}"

- name: "check if existing key '{{ icinga2_pki_fqdn_key }}'"
  stat:
    path: "{{ icinga2_pki_fqdn_key }}"
    checksum_algorithm: sha1
    get_checksum: yes
  register: __satellite_key

- name: "check for existing '{{ icinga2_pki_ca_cert }}'"
  stat:
    path: "{{ icinga2_pki_ca_cert }}"
    checksum_algorithm: sha1
    get_checksum: yes
  register: __ca_crt

# # compare checksum for ca.cert
# - name: check local ca.crt
#   stat:
#     path: files/ca.crt
#     checksum_algorithm: sha1
#     get_checksum: yes
#   register: __local_ca_crt
#
# - name: set facts
#   set_fact:
#     icinga2_ca_checksum: "{{ __ca_crt.stat.checksum }}"
#   when: __ca_crt.stat.exists | bool
#
# - name: set facts
#   set_fact:
#     icinga2_local_ca_checksum: "{{ __local_ca_crt.stat.checksum }}"
#   when: __local_ca_crt.stat.exists | bool
#
# - debug:
#     var: "{{ item }}"
#   when: item is defined
#   with_items:
#     - __ca_crt.stat
#     - __local_ca_crt.stat
#     - icinga2_ca_checksum
#     - icinga2_local_ca_checksum
#
# - name: remove old ca file from satellite
#   file:
#     path: "{{ item }}"
#     state: absent
#   loop:
#     - /var/lib/icinga2/certs
#     - /var/lib/icinga2/ca
#   when: (
#     not icinga2_local_ca_checksum is defined and
#     icinga2_ca_checksum is defined and
#     icinga2_local_ca_checksum != icinga2_ca_checksum)
#
# - name: set facts
#   set_fact:
#     __satellite_key.stat.exists: false
#   when: (
#     icinga2_local_ca_checksum is defined and
#     icinga2_ca_checksum is defined and
#     icinga2_local_ca_checksum != icinga2_ca_checksum)
#
# - debug:
#     var: "{{ item }}"
#   when: item is defined
#   with_items:
#     - __satellite_key.stat

- block:
    #
    # - name: copy ca.crt from primary icinga2 master
    #   fetch:
    #     src: "{{ icinga2_pki_ca_cert }}"
    #     dest: files/ca.crt
    #     flat: true
    #   delegate_to: '{{ icinga2_primary_master }}'

    - name: "copy ca.crt to '{{ ansible_fqdn }}'"
      copy:
        src: files/ca.crt
        dest: "{{ icinga2_pki_ca_cert }}"
        owner: "{{ icinga2_user }}"
        group: "{{ icinga2_user }}"

    - name: "create a pki ticket at '{{ icinga2_primary_master }}'"
      shell: |
        icinga2 pki ticket --cn {{ icinga2_certificate_cn }}
      register: ticket
      delegate_to: "{{ icinga2_primary_master }}"
      when: icinga2_salt is defined

    - name: set facts
      set_fact:
        icinga2_fqdn_ticket: "{{ ticket.stdout }}"

    - name: configure icinga2 satellite pki
    ## http://lowendbox.com/blog/server-monitoring-with-icinga-2-part-2-the-node-ubuntu-host/
    ## http://serverfault.com/questions/647805/how-to-set-up-icinga2-remote-client-without-using-cli-wizard
      command: "{{ item }}"
      with_items:
        - icinga2 pki new-cert
          --cn {{ icinga2_certificate_cn }}
          --key {{ icinga2_pki_fqdn_key }}
          --cert {{ icinga2_pki_fqdn_cert }}

        - icinga2 pki save-cert
          --key {{ icinga2_pki_fqdn_key }}
          --cert {{ icinga2_pki_fqdn_cert }}
          --trustedcert {{ icinga2_pki_master_cert }}
          --host {{ icinga2_primary_master }}

        - icinga2 pki request
          --host {{ icinga2_primary_master }}
          --port {{ icinga2_master_port | default(5665) }}
          --ticket {{ icinga2_fqdn_ticket }}
          --key {{ icinga2_pki_fqdn_key }}
          --cert {{ icinga2_pki_fqdn_cert }}
          --trustedcert {{ icinga2_pki_master_cert }}
          --ca {{ icinga2_pki_ca_key }}

        - icinga2 node setup
          --ticket {{ icinga2_fqdn_ticket }}
          --endpoint {{ icinga2_primary_master }}
          --zone {{ ansible_fqdn }}
          --parent_host {{ icinga2_primary_master }}
          --trustedcert {{ icinga2_pki_master_cert }}

      become: true
      when: not __satellite_key.stat.exists and ticket.stdout is defined
      notify:
        - check configuration
        - restart icinga2

    - name: fix permissions for icinga2 pki directory
      file:
        path: "{{ icinga2_pki_dir }}"
        owner: "{{ icinga2_user }}"
        group: "{{ icinga2_user }}"
        recurse: true

  when: not __satellite_key.stat.exists


- name: create zone entry under '/etc/icinga2/zones.d' on master '{{ icinga2_primary_master }}'
  file:
    dest: /etc/icinga2/zones.d/{{ icinga2_satellite_zone }}
    state: directory
  delegate_to: "{{ icinga2_primary_master }}"

# create on both masters!
- name: create zone file on master
  template:
    src: etc/icinga2/satellite.conf.j2
    dest: /etc/icinga2/satellites.d/{{ icinga2_satellite_zone }}.conf
  delegate_to: "{{ item.key }}"
  with_dict:
    "{{ icinga2_masters }}"
  notify:
    - restart icinga2 master

- name: create host object file for satellite on master '{{ icinga2_primary_master }}'
  template:
    src: etc/icinga2/satellite-zone.conf.j2
    dest: /etc/icinga2/zones.d/{{ icinga2_satellite_zone }}/{{ icinga2_certificate_cn }}.conf
  delegate_to: "{{ icinga2_primary_master }}"
  notify:
    - restart icinga2 master

- name: ensure that satellite has api connetions
  stat:
    path: "/var/lib/icinga2/api/zones/{{ icinga2_satellite_zone }}/_etc/{{ icinga2_certificate_cn }}.conf"
  register: __satellite_api_connections

- name: set facts
  set_fact:
    icinga2_satellite_has_api_connection: "{{ __satellite_api_connections.stat.exists }}"

# - debug:
#     var: "{{ item }}"
#   when: item is defined
#   with_items:
#     # - "/var/lib/icinga2/api/zones/{{ icinga2_satellite_zone }}/_etc/{{ icinga2_certificate_cn }}.conf"
#     # - icinga2_certificate_cn
#     - icinga2_satellite_has_api_connection
